{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/GitAssignment/src/components/SearchForm.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { MdSearch } from \"react-icons/md\"; // method to overide material ui styles\n\nconst useStyles = makeStyles(theme => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1, 0, 3)\n  },\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: \"80%\"\n  },\n  button: {\n    padding: \"9px 24px\",\n    marginLeft: \"9px\"\n  }\n}));\n\nconst SearchForm = ({\n  location,\n  history\n}) => {\n  let params = new URLSearchParams(location.search);\n  let searchParams = params.get(\"q\");\n  let typeParams = params.get(\"type\");\n  const [searchInput, setSearchInput] = useState(searchParams ? searchParams : \"\"); // assign usestyles to use in class styles\n\n  const classes = useStyles(); // method for controlled form\n\n  const onChange = e => setSearchInput(e.target.value);\n\n  const search = e => {\n    e.preventDefault();\n\n    if (searchInput && searchInput !== searchParams) {\n      if (typeParams === null) typeParams = \"Users\";\n      history.push(`/search/?q=${searchInput}&type=${typeParams}`);\n    }\n  };\n\n  useEffect(() => {\n    setSearchInput(searchParams ? searchParams : \"\"); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heroContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    color: \"secondary\",\n    autoComplete: \"gitSearch\",\n    name: \"gitSearch\",\n    variant: \"outlined\",\n    required: true,\n    align: \"left\",\n    id: \"gitSearch\",\n    label: \"Github User or Repository\",\n    autoFocus: true,\n    value: searchInput,\n    className: classes.textField,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"default\",\n    className: classes.button,\n    onClick: e => search(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MdSearch, {\n    size: \"1.7em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  }))))))));\n};\n\nexport default withRouter(SearchForm);","map":{"version":3,"sources":["/Users/apple/Desktop/GitAssignment/src/components/SearchForm.jsx"],"names":["React","useState","useEffect","withRouter","makeStyles","Container","Grid","TextField","Button","MdSearch","useStyles","theme","heroContent","backgroundColor","palette","background","paper","padding","spacing","form","width","marginTop","textField","button","marginLeft","SearchForm","location","history","params","URLSearchParams","search","searchParams","get","typeParams","searchInput","setSearchInput","classes","onChange","e","target","value","preventDefault","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { MdSearch } from \"react-icons/md\";\n\n// method to overide material ui styles\nconst useStyles = makeStyles((theme) => ({\n\theroContent: {\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tpadding: theme.spacing(1, 0, 3),\n\t},\n\tform: {\n\t\twidth: \"100%\",\n\t\tmarginTop: theme.spacing(3),\n\t},\n\ttextField: {\n\t\twidth: \"80%\",\n\t},\n\tbutton: {\n\t\tpadding: \"9px 24px\",\n\t\tmarginLeft: \"9px\",\n\t},\n}));\n\nconst SearchForm = ({ location, history }) => {\n\tlet params = new URLSearchParams(location.search);\n\tlet searchParams = params.get(\"q\");\n\tlet typeParams = params.get(\"type\");\n\n\tconst [searchInput, setSearchInput] = useState(searchParams ? searchParams : \"\");\n\n\t// assign usestyles to use in class styles\n\tconst classes = useStyles();\n\n\t// method for controlled form\n\tconst onChange = (e) => setSearchInput(e.target.value);\n\n\tconst search = (e) => {\n\t\te.preventDefault();\n\t\tif (searchInput && searchInput !== searchParams) {\n\t\t\tif (typeParams === null) typeParams = \"Users\";\n\t\t\thistory.push(`/search/?q=${searchInput}&type=${typeParams}`);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tsetSearchInput(searchParams ? searchParams : \"\");\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [searchParams]);\n\n\treturn (\n\t\t<div>\n\t\t\t{/* Searh Recipes Form */}\n\t\t\t<div className={classes.heroContent}>\n\t\t\t\t<Container maxWidth=\"lg\">\n\t\t\t\t\t<form className={classes.form} noValidate onSubmit={search}>\n\t\t\t\t\t\t<Grid container spacing={1} justify=\"center\">\n\t\t\t\t\t\t\t<Grid item xs={12} sm={12} align=\"center\">\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tautoComplete=\"gitSearch\"\n\t\t\t\t\t\t\t\t\tname=\"gitSearch\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\talign=\"left\"\n\t\t\t\t\t\t\t\t\tid=\"gitSearch\"\n\t\t\t\t\t\t\t\t\tlabel=\"Github User or Repository\"\n\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\tvalue={searchInput}\n\t\t\t\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\t\t\t\tonChange={(e) => onChange(e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\t\t\tonClick={(e) => search(e)}>\n\t\t\t\t\t\t\t\t\t<MdSearch size=\"1.7em\" />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</form>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(SearchForm);\n"]},"metadata":{},"sourceType":"module"}