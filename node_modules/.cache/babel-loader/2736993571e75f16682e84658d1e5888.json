{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/react-github-users-repos-finder/src/pages/Home.jsx\";\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport SearchForm from '../components/SearchForm';\nimport TypeSelector from '../components/TypeSelector';\nimport UserList from '../components/UserList';\nimport RepoList from '../components/RepoList';\nimport { searchUsersRepos, clearResults } from '../actions/github';\n\nconst Home = ({\n  github,\n  location,\n  searchUsersRepos,\n  clearResults\n}) => {\n  let params = new URLSearchParams(location.search);\n  let searchParams = params.get('q');\n  let pageParams = params.get('p');\n  let typeParams = params.get('type');\n  let sortParams = params.get('s');\n\n  const getGithub = () => {\n    if (searchParams !== null) {\n      if (pageParams === null) pageParams = 1;\n      if (typeParams === null) typeParams = 'Users';\n      if (sortParams === null) sortParams = '';\n      searchUsersRepos(searchParams, pageParams, typeParams, sortParams);\n    }\n\n    if (searchParams === null && pageParams === null && typeParams === null && sortParams === null) {\n      clearResults();\n    }\n  };\n\n  useEffect(() => {\n    getGithub(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams, pageParams, typeParams, sortParams]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TypeSelector, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), github.type === 'Users' && /*#__PURE__*/React.createElement(UserList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 35\n    }\n  }), github.type === 'Repositories' && /*#__PURE__*/React.createElement(RepoList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 42\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  github: state.github\n});\n\nexport default connect(mapStateToProps, {\n  searchUsersRepos,\n  clearResults\n})(Home);","map":{"version":3,"sources":["/Users/apple/Desktop/react-github-users-repos-finder/src/pages/Home.jsx"],"names":["React","Fragment","useEffect","connect","SearchForm","TypeSelector","UserList","RepoList","searchUsersRepos","clearResults","Home","github","location","params","URLSearchParams","search","searchParams","get","pageParams","typeParams","sortParams","getGithub","type","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,mBAA/C;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBJ,EAAAA,gBAApB;AAAsCC,EAAAA;AAAtC,CAAD,KAA0D;AACrE,MAAII,MAAM,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAAb;AACA,MAAIC,YAAY,GAAGH,MAAM,CAACI,GAAP,CAAW,GAAX,CAAnB;AACA,MAAIC,UAAU,GAAGL,MAAM,CAACI,GAAP,CAAW,GAAX,CAAjB;AACA,MAAIE,UAAU,GAAGN,MAAM,CAACI,GAAP,CAAW,MAAX,CAAjB;AACA,MAAIG,UAAU,GAAGP,MAAM,CAACI,GAAP,CAAW,GAAX,CAAjB;;AAEA,QAAMI,SAAS,GAAG,MAAM;AACtB,QAAIL,YAAY,KAAK,IAArB,EAA2B;AACzB,UAAIE,UAAU,KAAK,IAAnB,EAAyBA,UAAU,GAAG,CAAb;AACzB,UAAIC,UAAU,KAAK,IAAnB,EAAyBA,UAAU,GAAG,OAAb;AACzB,UAAIC,UAAU,KAAK,IAAnB,EAAyBA,UAAU,GAAG,EAAb;AACzBZ,MAAAA,gBAAgB,CAACQ,YAAD,EAAeE,UAAf,EAA2BC,UAA3B,EAAuCC,UAAvC,CAAhB;AACD;;AACD,QACEJ,YAAY,KAAK,IAAjB,IACAE,UAAU,KAAK,IADf,IAEAC,UAAU,KAAK,IAFf,IAGAC,UAAU,KAAK,IAJjB,EAKE;AACAX,MAAAA,YAAY;AACb;AACF,GAfD;;AAiBAP,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,SAAS,GADK,CAEd;AACD,GAHQ,EAGN,CAACL,YAAD,EAAeE,UAAf,EAA2BC,UAA3B,EAAuCC,UAAvC,CAHM,CAAT;AAKA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGT,MAAM,CAACW,IAAP,KAAgB,OAAhB,iBAA2B,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH9B,EAIGX,MAAM,CAACW,IAAP,KAAgB,cAAhB,iBAAkC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJrC,CADF;AAQD,CArCD;;AAsCA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,MAAM,EAAEa,KAAK,CAACb;AADkB,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CACpBoB,eADoB,EAEpB;AAAEf,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAFoB,CAAP,CAGbC,IAHa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport SearchForm from '../components/SearchForm';\nimport TypeSelector from '../components/TypeSelector';\nimport UserList from '../components/UserList';\nimport RepoList from '../components/RepoList';\nimport { searchUsersRepos, clearResults } from '../actions/github';\n\nconst Home = ({ github, location, searchUsersRepos, clearResults }) => {\n  let params = new URLSearchParams(location.search);\n  let searchParams = params.get('q');\n  let pageParams = params.get('p');\n  let typeParams = params.get('type');\n  let sortParams = params.get('s');\n\n  const getGithub = () => {\n    if (searchParams !== null) {\n      if (pageParams === null) pageParams = 1;\n      if (typeParams === null) typeParams = 'Users';\n      if (sortParams === null) sortParams = '';\n      searchUsersRepos(searchParams, pageParams, typeParams, sortParams);\n    }\n    if (\n      searchParams === null &&\n      pageParams === null &&\n      typeParams === null &&\n      sortParams === null\n    ) {\n      clearResults();\n    }\n  };\n\n  useEffect(() => {\n    getGithub();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams, pageParams, typeParams, sortParams]);\n\n  return (\n    <Fragment>\n      <SearchForm />\n      <TypeSelector />\n      {github.type === 'Users' && <UserList />}\n      {github.type === 'Repositories' && <RepoList />}\n    </Fragment>\n  );\n};\nconst mapStateToProps = state => ({\n  github: state.github\n});\n\nexport default connect(\n  mapStateToProps,\n  { searchUsersRepos, clearResults }\n)(Home);\n"]},"metadata":{},"sourceType":"module"}