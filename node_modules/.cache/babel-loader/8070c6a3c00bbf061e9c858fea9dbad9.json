{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/GitAssignment/src/components/UserList.jsx\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport UserItem from './UserItem';\nimport Spinner from './Spinner';\nimport SortSelector from './SortSelector';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom'; // method to overide material ui styles\n\nconst useStyles = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst UserList = ({\n  github\n}) => {\n  const classes = useStyles();\n  const userSortOptions = [{\n    name: 'Best Match',\n    value: ''\n  }, {\n    name: 'Most Followers',\n    value: 'follower'\n  }, {\n    name: 'Most Repositories',\n    value: 'repositories'\n  }, {\n    name: 'Recently Joined',\n    value: 'joined'\n  }];\n\n  if (github.loading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: classes.cardGrid,\n      maxWidth: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, !github.loading && github.users.length !== 0 && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      sm: 6,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      style: {\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, github.usersTotal, \" Users\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      sm: 6,\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(SortSelector, {\n      options: userSortOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, github.users.map(user => /*#__PURE__*/React.createElement(UserItem, {\n      key: user.id,\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    })))));\n  }\n};\n\nconst mapStateToProps = state => ({\n  github: state.github\n});\n\nexport default connect(mapStateToProps, null)(withRouter(UserList));","map":{"version":3,"sources":["/Users/apple/Desktop/GitAssignment/src/components/UserList.jsx"],"names":["React","Fragment","connect","Grid","Container","UserItem","Spinner","SortSelector","Typography","makeStyles","withRouter","useStyles","theme","cardGrid","paddingTop","spacing","paddingBottom","UserList","github","classes","userSortOptions","name","value","loading","users","length","marginTop","usersTotal","map","user","id","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport UserItem from './UserItem';\nimport Spinner from './Spinner';\nimport SortSelector from './SortSelector';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\n\n// method to overide material ui styles\nconst useStyles = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst UserList = ({ github }) => {\n  const classes = useStyles();\n\n  const userSortOptions = [\n    {\n      name: 'Best Match',\n      value: ''\n    },\n    {\n      name: 'Most Followers',\n      value: 'follower'\n    },\n    {\n      name: 'Most Repositories',\n      value: 'repositories'\n    },\n    {\n      name: 'Recently Joined',\n      value: 'joined'\n    }\n  ];\n\n  if (github.loading) {\n    return <Spinner />;\n  } else {\n    return (\n      <Fragment>\n        <Container className={classes.cardGrid} maxWidth='lg'>\n          {!github.loading && github.users.length !== 0 && (\n            <Grid container spacing={4} justify='center'>\n              <Grid item xs={6} sm={6} align='left'>\n                <Typography variant='h5' style={{ marginTop: '20px' }}>\n                  {github.usersTotal} Users\n                </Typography>\n              </Grid>\n              <Grid item xs={6} sm={6} align='right'>\n                <SortSelector options={userSortOptions} />\n              </Grid>\n            </Grid>\n          )}\n          <Grid container spacing={4} justify='center'>\n            {github.users.map(user => (\n              <UserItem key={user.id} user={user} />\n            ))}\n          </Grid>\n        </Container>\n      </Fragment>\n    );\n  }\n};\n\nconst mapStateToProps = state => ({\n  github: state.github\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(withRouter(UserList));\n"]},"metadata":{},"sourceType":"module"}