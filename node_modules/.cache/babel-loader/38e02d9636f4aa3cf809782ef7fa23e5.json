{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/GitAssignment/src/components/TypeSelector.jsx\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Container from '@material-ui/core/Container';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'; // method to overide material ui styles\n\nconst useStyles = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  chip: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst TypeSelector = ({\n  github,\n  history,\n  location\n}) => {\n  const classes = useStyles();\n  let params = new URLSearchParams(location.search);\n  let searchParams = params.get('q');\n  let typeParams = params.get('type');\n  const [active, setActive] = useState('Users');\n\n  const selectType = type => {\n    if (type !== active) {\n      setActive(type);\n      history.push(`/search/?q=${searchParams}&type=${type}`);\n    }\n  };\n\n  useEffect(() => {\n    setActive(typeParams ? typeParams : 'Users'); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [typeParams]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, github.usersTotal || github.reposTotal ? /*#__PURE__*/React.createElement(Container, {\n    className: classes.cardGrid,\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    fullWidth: true,\n    \"aria-label\": \"Full width outlined button group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => selectType('Users'),\n    className: active === 'Users' ? 'sActive' : 'sInactive',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Users\", /*#__PURE__*/React.createElement(Chip, {\n    size: \"small\",\n    label: github.usersTotal,\n    className: classes.chip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => selectType('Repositories'),\n    className: active === 'Repositories' ? 'sActive' : 'sInactive',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Repositories\", /*#__PURE__*/React.createElement(Chip, {\n    size: \"small\",\n    label: github.reposTotal,\n    className: classes.chip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  })))))) : '');\n};\n\nconst mapStateToProps = state => ({\n  github: state.github\n});\n\nexport default connect(mapStateToProps, null)(withRouter(TypeSelector));","map":{"version":3,"sources":["/Users/apple/Desktop/GitAssignment/src/components/TypeSelector.jsx"],"names":["React","Fragment","useState","useEffect","Grid","Button","ButtonGroup","Container","Chip","makeStyles","connect","withRouter","useStyles","theme","cardGrid","paddingTop","spacing","paddingBottom","chip","marginLeft","TypeSelector","github","history","location","classes","params","URLSearchParams","search","searchParams","get","typeParams","active","setActive","selectType","type","push","usersTotal","reposTotal","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Container from '@material-ui/core/Container';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n// method to overide material ui styles\nconst useStyles = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  chip: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst TypeSelector = ({ github, history, location }) => {\n  const classes = useStyles();\n\n  let params = new URLSearchParams(location.search);\n  let searchParams = params.get('q');\n  let typeParams = params.get('type');\n\n  const [active, setActive] = useState('Users');\n\n  const selectType = type => {\n    if (type !== active) {\n      setActive(type);\n      history.push(`/search/?q=${searchParams}&type=${type}`);\n    }\n  };\n\n  useEffect(() => {\n    setActive(typeParams ? typeParams : 'Users');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [typeParams]);\n\n  return (\n    <Fragment>\n      {github.usersTotal || github.reposTotal ? (\n        <Container className={classes.cardGrid} maxWidth='lg'>\n          <Grid container spacing={4} justify='center'>\n            <Grid item xs={12} sm={8} align='center'>\n              <ButtonGroup\n                fullWidth\n                aria-label='Full width outlined button group'\n              >\n                <Button\n                  onClick={() => selectType('Users')}\n                  className={active === 'Users' ? 'sActive' : 'sInactive'}\n                >\n                  Users\n                  <Chip\n                    size='small'\n                    label={github.usersTotal}\n                    className={classes.chip}\n                  />\n                </Button>\n                <Button\n                  onClick={() => selectType('Repositories')}\n                  className={\n                    active === 'Repositories' ? 'sActive' : 'sInactive'\n                  }\n                >\n                  Repositories\n                  <Chip\n                    size='small'\n                    label={github.reposTotal}\n                    className={classes.chip}\n                  />\n                </Button>\n              </ButtonGroup>\n            </Grid>\n          </Grid>\n        </Container>\n      ) : (\n        ''\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => ({\n  github: state.github\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(withRouter(TypeSelector));\n"]},"metadata":{},"sourceType":"module"}