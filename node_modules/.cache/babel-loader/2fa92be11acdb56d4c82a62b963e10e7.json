{"ast":null,"code":"import { SET_LOADING, SET_SEARCH_QUERY, SEARCH_USERS, SEARCH_REPOS, SET_SEARCH_USERS_TOTAL, SET_SEARCH_REPOS_TOTAL, CLEAR_RESULTS, GET_USER_REPOS, GET_USER } from '../actions/types';\nconst initialState = {\n  searchQuery: null,\n  type: 'Users',\n  loading: false,\n  usersTotal: null,\n  reposTotal: null,\n  users: [],\n  repos: [],\n  currentUser: {},\n  currentUserRepos: []\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_SEARCH_QUERY:\n      return { ...state,\n        searchQuery: payload\n      };\n\n    case SEARCH_USERS:\n      return { ...state,\n        users: payload,\n        loading: false,\n        type: 'Users'\n      };\n\n    case SEARCH_REPOS:\n      return { ...state,\n        repos: payload,\n        loading: false,\n        type: 'Repositories'\n      };\n\n    case SET_SEARCH_USERS_TOTAL:\n      return { ...state,\n        usersTotal: payload,\n        loading: false\n      };\n\n    case SET_SEARCH_REPOS_TOTAL:\n      return { ...state,\n        reposTotal: payload,\n        loading: false\n      };\n\n    case CLEAR_RESULTS:\n      return { ...state,\n        users: [],\n        repos: [],\n        usersTotal: null,\n        reposTotal: null,\n        loading: false,\n        searchQuery: null\n      };\n\n    case GET_USER:\n      return { ...state,\n        currentUser: payload,\n        loading: false\n      };\n\n    case GET_USER_REPOS:\n      return { ...state,\n        currentUserRepos: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/apple/Desktop/GitAssignment/src/reducers/github.js"],"names":["SET_LOADING","SET_SEARCH_QUERY","SEARCH_USERS","SEARCH_REPOS","SET_SEARCH_USERS_TOTAL","SET_SEARCH_REPOS_TOTAL","CLEAR_RESULTS","GET_USER_REPOS","GET_USER","initialState","searchQuery","type","loading","usersTotal","reposTotal","users","repos","currentUser","currentUserRepos","state","action","payload"],"mappings":"AAAA,SACEA,WADF,EAEEC,gBAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,sBALF,EAMEC,sBANF,EAOEC,aAPF,EAQEC,cARF,EASEC,QATF,QAUO,kBAVP;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,IADM;AAEnBC,EAAAA,IAAI,EAAE,OAFa;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,UAAU,EAAE,IAJO;AAKnBC,EAAAA,UAAU,EAAE,IALO;AAMnBC,EAAAA,KAAK,EAAE,EANY;AAOnBC,EAAAA,KAAK,EAAE,EAPY;AAQnBC,EAAAA,WAAW,EAAE,EARM;AASnBC,EAAAA,gBAAgB,EAAE;AATC,CAArB;AAYA,eAAe,UAASC,KAAK,GAAGV,YAAjB,EAA+BW,MAA/B,EAAuC;AACpD,QAAM;AAAET,IAAAA,IAAF;AAAQU,IAAAA;AAAR,MAAoBD,MAA1B;;AACA,UAAQT,IAAR;AACE,SAAKX,WAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELP,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKX,gBAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELT,QAAAA,WAAW,EAAEW;AAFR,OAAP;;AAIF,SAAKnB,YAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELJ,QAAAA,KAAK,EAAEM,OAFF;AAGLT,QAAAA,OAAO,EAAE,KAHJ;AAILD,QAAAA,IAAI,EAAE;AAJD,OAAP;;AAMF,SAAKR,YAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELH,QAAAA,KAAK,EAAEK,OAFF;AAGLT,QAAAA,OAAO,EAAE,KAHJ;AAILD,QAAAA,IAAI,EAAE;AAJD,OAAP;;AAMF,SAAKP,sBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELN,QAAAA,UAAU,EAAEQ,OAFP;AAGLT,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,sBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELL,QAAAA,UAAU,EAAEO,OAFP;AAGLT,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,aAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,KAAK,EAAE,EAHF;AAILH,QAAAA,UAAU,EAAE,IAJP;AAKLC,QAAAA,UAAU,EAAE,IALP;AAMLF,QAAAA,OAAO,EAAE,KANJ;AAOLF,QAAAA,WAAW,EAAE;AAPR,OAAP;;AASF,SAAKF,QAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,WAAW,EAAEI,OAFR;AAGLT,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,cAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELD,QAAAA,gBAAgB,EAAEG,OAFb;AAGLT,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOO,KAAP;AA5DJ;AA8DD","sourcesContent":["import {\n  SET_LOADING,\n  SET_SEARCH_QUERY,\n  SEARCH_USERS,\n  SEARCH_REPOS,\n  SET_SEARCH_USERS_TOTAL,\n  SET_SEARCH_REPOS_TOTAL,\n  CLEAR_RESULTS,\n  GET_USER_REPOS,\n  GET_USER\n} from '../actions/types';\n\nconst initialState = {\n  searchQuery: null,\n  type: 'Users',\n  loading: false,\n  usersTotal: null,\n  reposTotal: null,\n  users: [],\n  repos: [],\n  currentUser: {},\n  currentUserRepos: []\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case SET_SEARCH_QUERY:\n      return {\n        ...state,\n        searchQuery: payload\n      };\n    case SEARCH_USERS:\n      return {\n        ...state,\n        users: payload,\n        loading: false,\n        type: 'Users'\n      };\n    case SEARCH_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n        type: 'Repositories'\n      };\n    case SET_SEARCH_USERS_TOTAL:\n      return {\n        ...state,\n        usersTotal: payload,\n        loading: false\n      };\n    case SET_SEARCH_REPOS_TOTAL:\n      return {\n        ...state,\n        reposTotal: payload,\n        loading: false\n      };\n    case CLEAR_RESULTS:\n      return {\n        ...state,\n        users: [],\n        repos: [],\n        usersTotal: null,\n        reposTotal: null,\n        loading: false,\n        searchQuery: null\n      };\n    case GET_USER:\n      return {\n        ...state,\n        currentUser: payload,\n        loading: false\n      };\n    case GET_USER_REPOS:\n      return {\n        ...state,\n        currentUserRepos: payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}