{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/GitAssignment/src/components/SearchForm.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { MdSearch } from 'react-icons/md'; // method to overide material ui styles\n\nconst useStyles = makeStyles(theme => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1, 0, 3)\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '80%'\n  },\n  button: {\n    padding: '9px 24px',\n    marginLeft: '9px'\n  }\n}));\n\nconst SearchForm = ({\n  location,\n  history\n}) => {\n  let params = new URLSearchParams(location.search);\n  let searchParams = params.get('q');\n  let typeParams = params.get('type');\n  const [searchInput, setSearchInput] = useState(searchParams ? searchParams : ''); // assign usestyles to use in class styles\n\n  const classes = useStyles(); // method for controlled form\n\n  const onChange = e => setSearchInput(e.target.value);\n\n  const search = e => {\n    e.preventDefault();\n\n    if (searchInput && searchInput !== searchParams) {\n      if (typeParams === null) typeParams = 'Users';\n      history.push(`/search/?q=${searchInput}&type=${typeParams}`);\n    }\n  };\n\n  useEffect(() => {\n    setSearchInput(searchParams ? searchParams : ''); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heroContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoComplete: \"gitSearch\",\n    name: \"gitSearch\",\n    variant: \"outlined\",\n    required: true,\n    align: \"left\",\n    id: \"gitSearch\",\n    label: \"Github User or Repository\",\n    autoFocus: true,\n    value: searchInput,\n    className: classes.textField,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"default\",\n    className: classes.button,\n    onClick: e => search(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MdSearch, {\n    size: \"1.7em\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nexport default withRouter(SearchForm);","map":{"version":3,"sources":["/Users/apple/Desktop/GitAssignment/src/components/SearchForm.jsx"],"names":["React","useState","useEffect","withRouter","makeStyles","Container","Grid","TextField","Button","MdSearch","useStyles","theme","heroContent","backgroundColor","palette","background","paper","padding","spacing","form","width","marginTop","textField","button","marginLeft","SearchForm","location","history","params","URLSearchParams","search","searchParams","get","typeParams","searchInput","setSearchInput","classes","onChange","e","target","value","preventDefault","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { MdSearch } from 'react-icons/md';\n\n// method to overide material ui styles\nconst useStyles = makeStyles(theme => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1, 0, 3)\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  textField: {\n    width: '80%'\n  },\n  button: {\n    padding: '9px 24px',\n    marginLeft: '9px'\n  }\n}));\n\nconst SearchForm = ({ location, history }) => {\n  let params = new URLSearchParams(location.search);\n  let searchParams = params.get('q');\n  let typeParams = params.get('type');\n\n  const [searchInput, setSearchInput] = useState(\n    searchParams ? searchParams : ''\n  );\n\n  // assign usestyles to use in class styles\n  const classes = useStyles();\n\n  // method for controlled form\n  const onChange = e => setSearchInput(e.target.value);\n\n  const search = e => {\n    e.preventDefault();\n    if (searchInput && searchInput !== searchParams) {\n      if (typeParams === null) typeParams = 'Users';\n      history.push(`/search/?q=${searchInput}&type=${typeParams}`);\n    }\n  };\n\n  useEffect(() => {\n    setSearchInput(searchParams ? searchParams : '');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams]);\n\n  return (\n    <div>\n      {/* Searh Recipes Form */}\n      <div className={classes.heroContent}>\n        <Container maxWidth='lg'>\n          <form className={classes.form} noValidate onSubmit={search}>\n            <Grid container spacing={1} justify='center'>\n              <Grid item xs={12} sm={12} align='center'>\n                <TextField\n                  autoComplete='gitSearch'\n                  name='gitSearch'\n                  variant='outlined'\n                  required\n                  align='left'\n                  id='gitSearch'\n                  label='Github User or Repository'\n                  autoFocus\n                  value={searchInput}\n                  className={classes.textField}\n                  onChange={e => onChange(e)}\n                />\n                <Button\n                  size='large'\n                  type='submit'\n                  variant='contained'\n                  color='default'\n                  className={classes.button}\n                  onClick={e => search(e)}\n                >\n                  <MdSearch size='1.7em' />\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(SearchForm);\n"]},"metadata":{},"sourceType":"module"}