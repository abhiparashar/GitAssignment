{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/GitAssignment/src/components/SortSelector.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { withRouter } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 150\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst SortSelector = ({\n  options,\n  history,\n  location\n}) => {\n  const classes = useStyles();\n  let params = new URLSearchParams(location.search);\n  let searchParams = params.get('q');\n  let typeParams = params.get('type');\n  let sortParams = params.get('s');\n  const [values, setValues] = useState(sortParams ? {\n    sort: `${sortParams}`\n  } : {\n    sort: ''\n  });\n\n  const handleChange = event => {\n    setValues(oldValues => ({ ...oldValues\n    }));\n    if (typeParams === null) typeParams = 'Users';\n    history.push(`/search/?q=${searchParams}&type=${typeParams}&s=${event.target.value}`);\n  };\n\n  useEffect(() => {\n    setValues(oldValues => ({ ...oldValues\n    }));\n  }, [sortParams]);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    shrink: true,\n    htmlFor: \"sort-label-placeholder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Sort\"), /*#__PURE__*/React.createElement(Select, {\n    className: classes.selectEmpty,\n    displayEmpty: true,\n    align: \"left\",\n    value: values.sort,\n    onChange: handleChange,\n    input: /*#__PURE__*/React.createElement(Input, {\n      name: \"sort\",\n      id: \"sort-label-placeholder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, options.map((option, i) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: i,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, option.name)))));\n};\n\nexport default withRouter(SortSelector);","map":{"version":3,"sources":["/Users/apple/Desktop/GitAssignment/src/components/SortSelector.jsx"],"names":["React","useEffect","useState","makeStyles","Input","InputLabel","MenuItem","FormControl","Select","withRouter","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SortSelector","options","history","location","classes","params","URLSearchParams","search","searchParams","get","typeParams","sortParams","values","setValues","sort","handleChange","event","oldValues","push","target","value","map","option","i","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { withRouter } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 150\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst SortSelector = ({ options, history, location }) => {\n  const classes = useStyles();\n  let params = new URLSearchParams(location.search);\n  let searchParams = params.get('q');\n  let typeParams = params.get('type');\n  let sortParams = params.get('s');\n\n  const [values, setValues] = useState(\n    sortParams ? { sort: `${sortParams}` } : { sort: '' }\n  );\n\n  const handleChange = event => {\n    setValues(oldValues => ({\n      ...oldValues\n    }));\n\n    if (typeParams === null) typeParams = 'Users';\n    history.push(\n      `/search/?q=${searchParams}&type=${typeParams}&s=${event.target.value}`\n    );\n  };\n\n  useEffect(() => {\n    setValues(oldValues => ({ ...oldValues }));\n  }, [sortParams]);\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel shrink htmlFor='sort-label-placeholder'>\n        Sort\n      </InputLabel>\n      <Select\n        className={classes.selectEmpty}\n        displayEmpty\n        align='left'\n        value={values.sort}\n        onChange={handleChange}\n        input={<Input name='sort' id='sort-label-placeholder' />}\n      >\n        {options.map((option, i) => (\n          <MenuItem key={i} value={option.value}>\n            <em>{option.name}</em>\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default withRouter(SortSelector);\n"]},"metadata":{},"sourceType":"module"}