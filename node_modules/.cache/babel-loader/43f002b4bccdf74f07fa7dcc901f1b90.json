{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/GitAssignment/src/components/RepoList.jsx\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport RepoItem from \"./RepoItem\";\nimport Spinner from \"./Spinner\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\"; // method to overide material ui styles\n\nconst useStyles = makeStyles(theme => ({\n  cardGrid: {\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst RepoList = ({\n  github\n}) => {\n  const classes = useStyles();\n  const repoSortOptions = [{\n    name: \"Best Match\",\n    value: \"\"\n  }, {\n    name: \"Most Stars\",\n    value: \"stars\"\n  }, {\n    name: \"Most Forks\",\n    value: \"forks\"\n  }, {\n    name: \"Recently Updated\",\n    value: \"Updated\"\n  }];\n\n  if (github.loading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 10\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      className: classes.cardGrid,\n      maxWidth: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, !github.loading && github.repos.length !== 0 && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      sm: 6,\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      style: {\n        marginTop: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }\n    }, github.reposTotal, \" repository results\")))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    }, github.repos.map(repo => /*#__PURE__*/React.createElement(RepoItem, {\n      key: repo.id,\n      repo: repo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }\n    })))));\n  }\n};\n\nconst mapStateToProps = state => ({\n  github: state.github\n});\n\nexport default connect(mapStateToProps, null)(RepoList);","map":{"version":3,"sources":["/Users/apple/Desktop/GitAssignment/src/components/RepoList.jsx"],"names":["React","Fragment","connect","Grid","Container","RepoItem","Spinner","Typography","makeStyles","useStyles","theme","cardGrid","paddingTop","spacing","paddingBottom","RepoList","github","classes","repoSortOptions","name","value","loading","repos","length","marginTop","reposTotal","map","repo","id","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport RepoItem from \"./RepoItem\";\nimport Spinner from \"./Spinner\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// method to overide material ui styles\nconst useStyles = makeStyles((theme) => ({\n\tcardGrid: {\n\t\tpaddingTop: theme.spacing(0),\n\t\tpaddingBottom: theme.spacing(3),\n\t},\n}));\n\nconst RepoList = ({ github }) => {\n\tconst classes = useStyles();\n\n\tconst repoSortOptions = [\n\t\t{\n\t\t\tname: \"Best Match\",\n\t\t\tvalue: \"\",\n\t\t},\n\t\t{\n\t\t\tname: \"Most Stars\",\n\t\t\tvalue: \"stars\",\n\t\t},\n\t\t{\n\t\t\tname: \"Most Forks\",\n\t\t\tvalue: \"forks\",\n\t\t},\n\t\t{\n\t\t\tname: \"Recently Updated\",\n\t\t\tvalue: \"Updated\",\n\t\t},\n\t];\n\n\tif (github.loading) {\n\t\treturn <Spinner />;\n\t} else {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Container className={classes.cardGrid} maxWidth=\"lg\">\n\t\t\t\t\t{!github.loading && github.repos.length !== 0 && (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<Grid container spacing={4}>\n\t\t\t\t\t\t\t\t<Grid item xs={6} sm={6} align=\"left\">\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h5\" style={{ marginTop: \"20px\" }}>\n\t\t\t\t\t\t\t\t\t\t{github.reposTotal} repository results\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t\t<Grid container spacing={4} justify=\"center\">\n\t\t\t\t\t\t{github.repos.map((repo) => (\n\t\t\t\t\t\t\t<RepoItem key={repo.id} repo={repo} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Container>\n\t\t\t</Fragment>\n\t\t);\n\t}\n};\n\nconst mapStateToProps = (state) => ({\n\tgithub: state.github,\n});\n\nexport default connect(mapStateToProps, null)(RepoList);\n"]},"metadata":{},"sourceType":"module"}